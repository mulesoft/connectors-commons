package $modeledClass.basePackage;

import org.mule.api.annotations.Config;
import org.mule.api.annotations.Processor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ${modeledClass.baseConfigClass.basePackage}.${modeledClass.baseConfigClass.name};

#foreach($import in $modeledClass.imports)
import ${import};
#end

public abstract class ${modeledClass.name} {

    private static final Logger logger = LoggerFactory.getLogger(${modeledClass.name}.class);

#foreach($processor in ${modeledClass.processors})

    @Processor
    public $processor.returnType ${processor.name}(#foreach($parameter in ${processor.parameters})${parameter}#if(${foreach.hasNext}), #end#end) {
        logger.debug("${processor.name} called.");
        #if(!(${processor.returnType} == "void"))return #{end}getConfig().getClient().${processor.name}(${processor.parameterNames});
    }
#end

    public abstract BaseConfig getConfig();

    public abstract void setConfig(BaseConfig config);
}
